[{"/home/nasrat/Bureau/Portefolio/portefolio/portefolio/src/index.js":"1","/home/nasrat/Bureau/Portefolio/portefolio/portefolio/src/App.js":"2","/home/nasrat/Bureau/Portefolio/portefolio/portefolio/src/reportWebVitals.js":"3","/home/nasrat/Bureau/Portefolio/portefolio/portefolio/src/components/HomePage.jsx":"4","/home/nasrat/Bureau/Portefolio/portefolio/portefolio/src/components/Projet.jsx":"5","/home/nasrat/Bureau/Portefolio/portefolio/portefolio/src/components/Competence.jsx":"6","/home/nasrat/Bureau/Portefolio/portefolio/portefolio/src/components/Contact.jsx":"7","/home/nasrat/Bureau/Portefolio/portefolio/portefolio/src/components/ManageProjet.jsx":"8","/home/nasrat/Bureau/Portefolio/portefolio/portefolio/src/components/Authentification.jsx":"9","/home/nasrat/Bureau/Portefolio/portefolio/portefolio/src/redux/actions/userAction.js":"10","/home/nasrat/Bureau/Portefolio/portefolio/portefolio/src/redux/store.js":"11","/home/nasrat/Bureau/Portefolio/portefolio/portefolio/src/redux/reducers/userReducer.js":"12","/home/nasrat/Bureau/Portefolio/portefolio/portefolio/src/components/Footer.jsx":"13"},{"size":857,"mtime":1612716234255,"results":"14","hashOfConfig":"15"},{"size":1014,"mtime":1612742366168,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1612345650805,"results":"17","hashOfConfig":"15"},{"size":323,"mtime":1612741127030,"results":"18","hashOfConfig":"15"},{"size":909,"mtime":1612742379385,"results":"19","hashOfConfig":"15"},{"size":973,"mtime":1612531700877,"results":"20","hashOfConfig":"15"},{"size":2352,"mtime":1612743482466,"results":"21","hashOfConfig":"15"},{"size":3326,"mtime":1612719962834,"results":"22","hashOfConfig":"15"},{"size":3457,"mtime":1612733287652,"results":"23","hashOfConfig":"15"},{"size":270,"mtime":1612715781838,"results":"24","hashOfConfig":"15"},{"size":650,"mtime":1612716348197,"results":"25","hashOfConfig":"15"},{"size":438,"mtime":1612715874671,"results":"26","hashOfConfig":"15"},{"size":718,"mtime":1612743298129,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"15o8in1",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/nasrat/Bureau/Portefolio/portefolio/portefolio/src/index.js",[],["58","59"],"/home/nasrat/Bureau/Portefolio/portefolio/portefolio/src/App.js",[],"/home/nasrat/Bureau/Portefolio/portefolio/portefolio/src/reportWebVitals.js",[],"/home/nasrat/Bureau/Portefolio/portefolio/portefolio/src/components/HomePage.jsx",[],"/home/nasrat/Bureau/Portefolio/portefolio/portefolio/src/components/Projet.jsx",[],"/home/nasrat/Bureau/Portefolio/portefolio/portefolio/src/components/Competence.jsx",["60"],"import React from \"react\";\n\nconst Competences = () => {\n  return (\n    <div className=\"boxes\">\n      <div className=\"webknowledge\">\n        <p>Developpement Web Fullstack React.js / Node.js</p>\n        <p>\n          {\" \"}\n          Technologies apprises : React.Js, Node.js, Express, MySQL, Redux,\n          Workbench, REST API, JWT, Postman, Github, Figma, TDD.\n        </p>\n      </div>\n      <div className=\"langage\">\n        <p>Langue: Francais (langue maternelle) et Anglais (bilingue)</p>\n      </div>\n      <div className=\"teamwork\">\n        <div>\n          <img\n            alter=\"worktogether\"\n            src=\"https://portrait2point0.com/wp-content/uploads/2018/11/rawpixel-653764-unsplash-1030x674.jpg\"\n          ></img>\n        </div>\n        <div>\n          <p>\n            Méthodologie: méthodes agiles et SCRUM. Utilisation des logiciels\n            Slack, Trello.\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Competences;\n","/home/nasrat/Bureau/Portefolio/portefolio/portefolio/src/components/Contact.jsx",["61"],"/home/nasrat/Bureau/Portefolio/portefolio/portefolio/src/components/ManageProjet.jsx",["62"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\nimport \"../style/ManageProjet.css\";\n\nconst ManageProjet = () => {\n  const [form, setForm] = useState({});\n  const [projetLists, setProjetLists] = useState([]);\n  const history = useHistory();\n\n  useEffect(() => {\n    axios\n      .get(`http://localhost:3001/api/projets`)\n      .then((response) => setProjetLists(response.data));\n  }, []);\n\n  const handleSubmit = async () => {\n    await axios\n      .post(`http://localhost:3001/api/projets`, {\n        ...form,\n      })\n      .then(() =>\n        axios\n          .get(`http://localhost:3001/api/projets`)\n          .then((result) => setProjetLists(result.data))\n      );\n    history.push(\"/\");\n  };\n\n  const handleChange = (e) => {\n    setForm({\n      ...form,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const handleDelete = async (id) => {\n    axios.delete(`http://localhost:3001/api/projets/${id}`);\n    await setProjetLists(projetLists.filter((pro) => pro.id !== id));\n  };\n\n  return (\n    <div className=\"projets\">\n      <h1>Projets</h1>\n      <div className=\"ProjetCards\">\n        {projetLists.map((projet) => (\n          <div className=\"DetailProjet\">\n            {/* <p>{projet.name}</p> */}\n            <p>\n              <img src={projet.img} />\n            </p>\n            <p>{projet.description}</p>\n            <p>{projet.date}</p>\n            <p>{projet.tech}</p>\n\n            <button\n              className=\"suppBouton\"\n              type=\"button\"\n              onClick={() => handleDelete(projet.id)}\n            >\n              <img\n                alt=\"boutonpoubelle\"\n                src=\"https://findicons.com/files/icons/42/basic/64/delete.png\"\n              />\n            </button>\n          </div>\n        ))}\n        <div className=\"post-project\">\n          <input\n            type=\"name\"\n            id=\"name\"\n            name=\"name\"\n            className=\"inputname\"\n            placeholder=\"nom du projet\"\n            onChange={(e) => handleChange(e)}\n          />\n        </div>\n        <div className=\"post-project\">\n          <input\n            type=\"description\"\n            id=\"description\"\n            name=\"description\"\n            className=\"inputname\"\n            placeholder=\"description\"\n            onChange={(e) => handleChange(e)}\n          />\n        </div>\n        <div className=\"post-project\">\n          <input\n            type=\"text\"\n            id=\"image\"\n            name=\"image\"\n            className=\"imglink\"\n            placeholder=\"image\"\n            onChange={(e) => handleChange(e)}\n          />\n        </div>\n        <div className=\"post-project\">\n          <input\n            type=\"date\"\n            id=\"date\"\n            name=\"date\"\n            className=\"inputname\"\n            onChange={(e) => handleChange(e)}\n          />\n        </div>\n\n        <div className=\"post-project\">\n          <input\n            type=\"tech\"\n            id=\"tech\"\n            name=\"tech\"\n            className=\"tech\"\n            placeholder=\"technologies\"\n            onChange={(e) => handleChange(e)}\n          />\n        </div>\n\n        <button className=\"addprojet\" type=\"submit\" onClick={handleSubmit}>\n          +\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default ManageProjet;\n","/home/nasrat/Bureau/Portefolio/portefolio/portefolio/src/components/Authentification.jsx",["63","64","65"],"import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { Redirect } from \"react-router\";\nimport { connect } from \"react-redux\";\nimport { useForm } from \"react-hook-form\";\n// import \"../style/Authentification.css\";\nimport {\n  userConnectedAction,\n  userDataAction,\n} from \"../redux/actions/userAction\";\n\nconst Authentification = ({ user, handleIsConnected, handleUserData }) => {\n  const { register, handleSubmit, errors, watch } = useForm({\n    mode: \"onTouched\",\n  });\n\n  // const { isSubmitted, isSubmittedSuccessful} = formState\n\n  const onSubmit = async () => {\n    await axios\n      .post(\"http://localhost:3001/api/admins/login\", watch())\n      .then((response) => response.data)\n      .then((data) => {\n        axios({\n          method: \"post\",\n          url: \"http://localhost:3001/api/profile\",\n          headers: {\n            Authorization: `Bearer ${data.token}`,\n          },\n        })\n          .then((response) => response.data)\n          .then((data) => {\n            handleIsConnected(true);\n            handleUserData({\n              pseudo: data.pseudo,\n              email: data.email,\n            });\n          });\n      });\n  };\n\n  const validation = {\n    email: {\n      required: \"vous devez entrer un email\",\n      pattern: {\n        value: /^[a-zA-Z0-9.-_]+@[a-zA-Z0-9-]+\\.([a-zA-Z0-9-]{2,3})$/,\n        message: \"Votre email n'est pas au bon format\",\n      },\n    },\n    password: {\n      required: \"vous devez entrer un mot de passe\",\n      minLength: {\n        value: 8,\n        message:\n          \"Ce champs doit contenir au moins 8 caractères alphanumériques\",\n      },\n    },\n  };\n\n  return (\n    <div className=\"container-content-image\">\n      <div className=\"sign-in\">\n        {user.connected && <Redirect to=\"/manageprojet\" />}\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <div className=\"form-group\">\n            <label htmlFor=\"email\">Email: </label>\n            <input\n              type=\"email\"\n              name=\"email\"\n              id=\"email\"\n              className={errors.email ? \"input-error\" : \"input-default\"}\n              ref={register(validation.email)}\n            />\n            {errors.email && (\n              <span className=\"feedback-error\">{errors.email.message}</span>\n            )}\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"pseudo\">Pseudo :</label>\n            <input type=\"pseudo\" name=\"pseudo\" id=\"pseudo\" />\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"password\">Mot de passe : </label>\n            <input\n              type=\"password\"\n              name=\"password\"\n              id=\"password\"\n              className={errors.password ? \"input-error\" : \"input-default\"}\n              ref={register(validation.password)}\n            />\n            {errors.password && (\n              <span className=\"feedback-error\">{errors.password.message}</span>\n            )}\n          </div>\n\n          <button type=\"submit\">Se connecter</button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  handleIsConnected: (newValue) => dispatch(userConnectedAction(newValue)),\n  handleUserData: (newValue) => dispatch(userDataAction(newValue)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Authentification);\n","/home/nasrat/Bureau/Portefolio/portefolio/portefolio/src/redux/actions/userAction.js",[],"/home/nasrat/Bureau/Portefolio/portefolio/portefolio/src/redux/store.js",[],"/home/nasrat/Bureau/Portefolio/portefolio/portefolio/src/redux/reducers/userReducer.js",[],"/home/nasrat/Bureau/Portefolio/portefolio/portefolio/src/components/Footer.jsx",["66","67"],{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":19,"column":11,"nodeType":"74","endLine":22,"endColumn":12},{"ruleId":"75","severity":1,"message":"76","line":1,"column":27,"nodeType":"77","messageId":"78","endLine":1,"endColumn":36},{"ruleId":"72","severity":1,"message":"73","line":50,"column":15,"nodeType":"74","endLine":50,"endColumn":39},{"ruleId":"75","severity":1,"message":"76","line":1,"column":17,"nodeType":"77","messageId":"78","endLine":1,"endColumn":26},{"ruleId":"75","severity":1,"message":"79","line":1,"column":28,"nodeType":"77","messageId":"78","endLine":1,"endColumn":36},{"ruleId":"75","severity":1,"message":"80","line":3,"column":10,"nodeType":"77","messageId":"78","endLine":3,"endColumn":14},{"ruleId":"75","severity":1,"message":"79","line":1,"column":17,"nodeType":"77","messageId":"78","endLine":1,"endColumn":25},{"ruleId":"75","severity":1,"message":"76","line":1,"column":27,"nodeType":"77","messageId":"78","endLine":1,"endColumn":36},"no-native-reassign",["81"],"no-negated-in-lhs",["82"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'Link' is defined but never used.","no-global-assign","no-unsafe-negation"]